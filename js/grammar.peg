{
  var CURR_ID = 0;
  var SYMBOL_TABLE = {
    "Alpha":"913",
    "Beta":"914",
    "Gamma": "915",
    "alpha": "945",
    "beta":"946",
    "gamma": "947",
  };
  var FORMULA = new Formula();
  var cleanup = function(){

  }
}

start =
  e:exp
  {
    FORMULA.set_root(e.id);
    cleanup();
    return FORMULA;
  }


exp "exp" =
  t:paren { return t;}
  / t:number { return t;}
  / t:value { return t;}


number "number" =
   v:DECIMAL
  {
   var node = FORMULA.add('NUMBER',-1);
   node.set('code', ""+v);
   node.set('value',v);
   return node;
  }

variable "variable"
  = v:LITERAL {
   var node = FORMULA.add('VAR',-1);
   node.set('code', ""+v.sym);
   node.set('name',v.name);
   return node;
  }

value "value"
  = n:number SEP* {return n;}
  / v:variable SEP* {return v;}

paren "paren"
  = OPAREN e:exp CPAREN
    {
      var p = FORMULA.add('PAREN',-1);
      e.set_parent(FORMULA, p.id);
      return p;
    }
/*

Basic Symbols

*/

DECIMAL "DECIMAL"
  = mant:[0-9]+"."dec:[0-9]+ {
      var v= mant.join("")+"."+dec.join("");
      return parseFloat(v,10)
    }
  / digits:[0-9]+ {return parseInt(digits.join(""),10)}

LITERAL "LITERAL"
  = l:[A-Za-z]+
    {
      var name = l.join("");
      var sym = name;
      return {name:name, sym:sym}
    }
  / "\\"l:[A-Za-z]+
    {
      var name = l.join("");
      var sym = "@"+SYMBOL_TABLE[name];
      return {name:name, sym:sym}
    }


SEP "SEP"
  = [ \t\r\n]

MULT "MULT"
= "\\cdot"SEP* {return "&#8727;"}
/ "\\times"SEP* {return "x"}
/ "*"SEP* {return "*"}

DIV "DIV"
= "\\frac"SEP* {return ""}

PLUS "PLUS"
= "\\plus"SEP* {return "+"}
/ "+"SEP* {return "+"}

MINUS "MINUS"
= "-"SEP* {return "-"}

EXP "EXP"
= "^"SEP* {return ""}

EQUALS "EQUALS"
= "="SEP* {return "="}


OCBRACE "OCBRACE"
  = "{"SEP*  {}

CCBRACE "CCBRACE"
  = "}"SEP* {}

OPAREN "OPAREN"
  = "("SEP* {}

CPAREN "CPAREN"
  = ")"SEP* {}
